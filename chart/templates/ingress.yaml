{{- if eq (include "omar-mapproxy.ingress.enabled" $) "true" -}}
{{- $annotations := merge .Values.ingress.annotations $.Values.global.ingress.annotations -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.appName }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: {{ .Values.ingressRewriteTarget }}
    {{- if (pluck "useTlsClientSAuth" .Values .Values.global | first) }}
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Release.Namespace }}/{{ .Values.global.authSslCertSecretName }}
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    {{- end }}
    {{- range $key, $value := $annotations }}
      {{- $key | nindent 4 }}: {{ tpl $value $ | quote }}
    {{- end }}
spec:
  ingressClassName: {{ include "omar-mapproxy.ingress.className" $ }}
{{- $hostnames := ternary ( list .Values.global.hostname ) .Values.hostnames ( empty .Values.hostnames ) }}
  tls:
  - hosts:
    {{- range $hostname := $hostnames }}
    - {{ $hostname }}
    {{- end }}
    {{- if (pluck "useTls" .Values .Values.global | first) }}
    secretName: {{ .Values.global.sslCertSecretName }}
    {{- end }}
  rules:
  {{- range $hostname := $hostnames }}
  - host: {{ $hostname }}
    http:
      paths:
      - path: {{ $.Values.ingressPath }}
        backend:
          serviceName: {{ $.Values.appName }}-app
          servicePort: {{ $.Values.internalPort }}
  {{- end }}
{{- end }}
