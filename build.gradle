buildscript {
  ext {
//    baseImage = "centos"
    baseImage = "rhel-minimal"
    grailsVersion = ""
    dockerFile=project.file("docker/Dockerfile")
    // must be a closure.  If set to =false then it thinks the proeprty does not exist
    hasJar={false}

    dockerStatementsOverride = {
       [
          "FROM centos:latest",
          "MAINTAINER RadiantBlue Technologies radiantblue.com",
           "USER root",
           "ENV HOME /home/omar",
          """RUN yum -y install epel-release clean all && \\
    yum install -y libffi && \\
    yum install -y proj && \\
    yum install -y freetype && \\
    yum install -y python && \\
    yum install -y python-pip && \\
    yum install -y python-paste && \\
    yum install -y python-paste-script && \\
    yum install -y  nss_wrapper gettext wget&& \\
    yum clean all && \\
    pip install MapProxy spawning""",
          """RUN useradd -u 1001 -r -g 0 --create-home -d \$HOME -s /sbin/nologin -c 'Default Application User' omar""",
           "COPY startup/run.sh \$HOME",
           "RUN chown 1001:0 -R /home/omar && chmod g+s \$HOME && chmod 777 \$HOME && chmod 777 \$HOME/*.sh",
          "USER 1001",
          "EXPOSE 8080",
           "WORKDIR /home/omar",
           "CMD ./run.sh"
       ]
     }
    if(System.env.OMAR_COMMON_PROPERTIES)
    {
      apply from: System.env.OMAR_COMMON_PROPERTIES
    }
  }
  repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
	  flatDir {
       dirs 'libs'
    }
   	jcenter()
  }
  dependencies {
    classpath "com.bmuschko:gradle-docker-plugin:${gradleDockerPluginV}"
    classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.5"
  }
}

plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
}


apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "maven-publish"
apply plugin: "maven"
